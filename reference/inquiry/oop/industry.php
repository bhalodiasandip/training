<?php
namespace Industry;
ini_set('display_errors', 1);
error_reporting(E_ALL);
class Quotation{
    //property
    public static $numberOfLift = 1;
    public static $industryLat = 22.289356;
    public static $industryLong = 70.787335;
    public $shippingLat;
    public $shippingLong;
    private $fiberWeight;
    private $fiberType;
    private $chemicalUsed;
    private $ovenTime;
    public $perKGPrice = 60;
    public $perLitterChemicalPrice = 15;
    public $perHourPrice = 50;

    public static function getAddress(){
        return "302-Rotec Corner, Khodal Chowk, 80 Feet Rd, Govindratn Green City, Rajkot, Gujarat 360004";
    }
    
    //method
    public function __construct($weight, $type){
        $this->fiberWeight = $weight;
        $this->fiberType = $type;
        $this->detectChemicalUsed();
        $this->detectOvenTime();
    }
    private function detectChemicalUsed(){
        if($this->fiberType == 'pvc')
        {
            $this->chemicalUsed = 5;
        }
        if($this->fiberType == 'backalight')
        {
            $this->chemicalUsed = 10;
        }
    }
    private function detectOvenTime(){
        if($this->fiberType == 'pvc')
        {
            $this->ovenTime = 2;
        }
        if($this->fiberType == 'backalight')
        {
            $this->ovenTime = 3;
        }
        return $this->ovenTime;
    }
    public function getPrice(){
        $total = 0;
        $total += ($this->perKGPrice * $this->fiberWeight);
        $total += ($this->chemicalUsed * $this->perLitterChemicalPrice);
        $total += ($this->ovenTime * $this->perHourPrice);
        return $total;
    }
    public function setShipingLocation($lat, $long){
        $this->shippingLat = $lat;
        $this->shippingLong = $long;        
    }
     public function distance($unit) {        
        if ((self::$industryLat == $this->shippingLat) && (self::$industryLong == $this->shippingLong)) {         
            return 0;
        }
        else 
        {
            $theta = self::$industryLong - $this->shippingLong;
            $dist = sin(deg2rad(self::$industryLat)) * sin(deg2rad($this->shippingLat)) +  cos(deg2rad(self::$industryLat)) * cos(deg2rad($this->shippingLat)) * cos(deg2rad($theta));
            $dist = acos($dist);
            $dist = rad2deg($dist);
            $miles = $dist * 60 * 1.1515;
            $unit = strtoupper($unit);

            if ($unit == "K") {
            return ($miles * 1.609344);
            } else if ($unit == "N") {
            return ($miles * 0.8684);
            } else {
            return $miles;
            }
        }
    }
}

class FabricationQuotation extends Quotation {
    public $sqFeet;
    public $sqFeetPrice = 20;
    public function setSqfeet($sq_feet){
        $this->sqFeet = $sq_feet;
    }
    public function getPrice()
    {
        $price = parent::getPrice(); // TODO: Change the autogenerated stub
        $price += ($this->sqFeet * $this->sqFeetPrice);
        return $price;
    }   
}

class AssemblingQuotation extends Quotation{
    public $assemblingWeight;
    public $assemblingPricePerKG = 30;
    public function setWeight($weight){
        $this->assemblingWeight = $weight;
    }
    public function getPrice()
    {
        $price = parent::getPrice(); // TODO: Change the autogenerated stub
        $price += ($this->assemblingWeight * $this->assemblingPricePerKG);
        return $price;
    }
}

// $hareshQuotation = new Quotation(20,'pvc');
// echo $hareshQuotation->getPrice();

// $rameshQuotation = new Quotation(30, 'backalight');
// echo $rameshQuotation->getPrice();
// // echo $rameshQuotation->detectOvenTime();

// $fabricationQuotation = new FabricationQuotation(20,'pvc');
// // $fabricationQuotation->setFiber();
// $fabricationQuotation->setSqfeet(50);
// echo $fabricationQuotation->getPrice();

// $fabricationQuotation->setShipingLocation(23.019110, 72.600258);
// echo $fabricationQuotation->distance("K");




// $assemblingQuotation = new AssemblingQuotation;
// $assemblingQuotation->setFiber(20, 'pvc');
// $assemblingQuotation->setWeight(12);
// echo $assemblingQuotation->getPrice();

// echo FabricationQuotation::getAddress();
// echo Quotation::$numberOfLift;